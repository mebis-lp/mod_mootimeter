{"version":3,"file":"reload_page_settings.min.js","sources":["../src/reload_page_settings.js"],"sourcesContent":["import {call as fetchMany} from 'core/ajax';\nimport Log from 'core/log';\nimport {exception as displayException} from 'core/notification';\nimport Templates from 'core/templates';\nimport {execReloadPagelist as reloadPagelist} from 'mod_mootimeter/reload_pagelist';\n\nexport const init = (uniqueID) => {\n\n    const obj = document.getElementById(uniqueID);\n    if (!obj) {\n        return;\n    }\n    obj.addEventListener(\"change\", changePage);\n\n    /**\n     * Store the value.\n     */\n    function changePage() {\n        var pageid = this.dataset.pageid;\n        const queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n        const cmid = urlParams.get('id');\n        execReloadPage(pageid, cmid, this.dataset);\n    }\n};\n\n/**\n * Call to store input value\n * @param {int} pageid\n * @param {int} cmid\n * @param {string} dataset\n * @returns {array}\n */\nconst reloadPage = (\n    pageid,\n    cmid,\n    dataset\n) => fetchMany([{\n    methodname: 'mod_mootimeter_get_pagecontentparams',\n    args: {\n        pageid,\n        cmid,\n        dataset\n    },\n}])[0];\n\n/**\n * Executes the call to store input value.\n * @param {int} pageid\n * @param {int} cmid\n * @param {array} dataset\n */\nconst execReloadPage = async(pageid, cmid, dataset) => {\n\n    if (!dataset) {\n        dataset = JSON.stringify([]);\n    } else {\n        dataset = JSON.stringify(dataset);\n    }\n\n    const response = await reloadPage(pageid, cmid, dataset);\n\n    if (response.code != 200) {\n        Log.error(response.string);\n    }\n\n    if (response.code == 200) {\n\n        var mtmstate = document.getElementById('mootimeterstate');\n\n        const pageparmas = JSON.parse(response.pageparams);\n\n        // Set new pageid.\n        mtmstate.setAttribute('data-pageid', pageparmas.pageid);\n\n        // Replace the settings col if necessary.\n        Templates.renderForPromise(pageparmas.colsettings.template, pageparmas.colsettings)\n            .then(({html, js}) => {\n                Templates.replaceNodeContents('#mootimeter-col-settings', html, js);\n                return true;\n            })\n            .catch((error) => displayException(error));\n\n        // Set URL parameter.\n        setGetParam('pageid', pageparmas.pageid);\n\n        // Set active page marked in pageslist.\n        reloadPagelist(pageid, cmid, true);\n\n        // Remove all tooltips of pageslist that are still present.\n        document.querySelectorAll('.tooltip').forEach(e => e.remove());\n    }\n};\n\n/**\n * Set the Query Parameter.\n * @param {string} key\n * @param {string} value\n */\nfunction setGetParam(key, value) {\n    if (history.pushState) {\n        var params = new URLSearchParams(window.location.search);\n        params.set(key, value);\n        var newUrl = window.location.origin\n            + window.location.pathname\n            + '?' + params.toString();\n        window.history.pushState({path: newUrl}, '', newUrl);\n    }\n}"],"names":["uniqueID","obj","document","getElementById","addEventListener","pageid","this","dataset","queryString","window","location","search","cmid","URLSearchParams","get","execReloadPage","async","JSON","stringify","response","methodname","args","reloadPage","code","error","string","mtmstate","pageparmas","parse","pageparams","setAttribute","renderForPromise","colsettings","template","then","_ref","html","js","replaceNodeContents","catch","key","value","history","pushState","params","set","newUrl","origin","pathname","toString","path","setGetParam","querySelectorAll","forEach","e","remove"],"mappings":"4dAMqBA,iBAEXC,IAAMC,SAASC,eAAeH,UAC/BC,KAGLA,IAAIG,iBAAiB,yBAMbC,OAASC,KAAKC,QAAQF,aACpBG,YAAcC,OAAOC,SAASC,OAE9BC,KADY,IAAIC,gBAAgBL,aACfM,IAAI,MAC3BC,eAAeV,OAAQO,KAAMN,KAAKC,mBA8BpCQ,eAAiBC,MAAMX,OAAQO,KAAML,WAKnCA,QAHCA,QAGSU,KAAKC,UAAUX,SAFfU,KAAKC,UAAU,UAKvBC,cA3BS,EACfd,OACAO,KACAL,WACC,cAAU,CAAC,CACZa,WAAY,uCACZC,KAAM,CACFhB,OAAAA,OACAO,KAAAA,KACAL,QAAAA,YAEJ,GAgBuBe,CAAWjB,OAAQO,KAAML,YAE3B,KAAjBY,SAASI,mBACLC,MAAML,SAASM,QAGF,KAAjBN,SAASI,KAAa,KAElBG,SAAWxB,SAASC,eAAe,yBAEjCwB,WAAaV,KAAKW,MAAMT,SAASU,YAGvCH,SAASI,aAAa,cAAeH,WAAWtB,2BAGtC0B,iBAAiBJ,WAAWK,YAAYC,SAAUN,WAAWK,aAClEE,MAAKC,WAACC,KAACA,KAADC,GAAOA,mCACAC,oBAAoB,2BAA4BF,KAAMC,KACzD,KAEVE,OAAOf,QAAU,2BAAiBA,kBAkB1BgB,IAAKC,UAClBC,QAAQC,UAAW,KACfC,OAAS,IAAI/B,gBAAgBJ,OAAOC,SAASC,QACjDiC,OAAOC,IAAIL,IAAKC,WACZK,OAASrC,OAAOC,SAASqC,OACvBtC,OAAOC,SAASsC,SAChB,IAAMJ,OAAOK,WACnBxC,OAAOiC,QAAQC,UAAU,CAACO,KAAMJ,QAAS,GAAIA,SAtB7CK,CAAY,SAAUxB,WAAWtB,gDAGlBA,OAAQO,MAAM,GAG7BV,SAASkD,iBAAiB,YAAYC,SAAQC,GAAKA,EAAEC"}