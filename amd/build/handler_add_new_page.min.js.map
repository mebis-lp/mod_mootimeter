{"version":3,"file":"handler_add_new_page.min.js","sources":["../src/handler_add_new_page.js"],"sourcesContent":["import {call as fetchMany} from 'core/ajax';\nimport {execReloadPage as reloadPage} from 'mod_mootimeter/reload_page';\n\nexport const init = (uniqueID) => {\n    const obj = document.getElementById(uniqueID);\n\n    if (!document.getElementById(uniqueID)) {\n        return;\n    }\n    obj.addEventListener(\"mouseup\", store);\n\n    /**\n     * Create new page.\n     * @returns {mixed}\n     */\n    function store() {\n        const tool = this.dataset.name;\n        const instance = this.dataset.instance;\n\n        return storeNewPage(tool, instance);\n    }\n};\n\n/**\n * Call to create a new instance\n * @param {string} tool\n * @param {int} instance\n * @returns {mixed}\n */\nconst createNewPage = (\n    tool,\n    instance,\n) => fetchMany([{\n    methodname: 'mod_mootimeter_add_new_page',\n    args: {\n        tool,\n        instance,\n    },\n}])[0];\n\n/**\n * Executes the call to create a new page.\n * @param {string} tool\n * @param {int} instance\n */\nconst storeNewPage = async(tool, instance) => {\n    const response = await createNewPage(tool, instance);\n    reloadPage(response.pageid, response.cmid);\n\n    // Scroll to top if a new page is created.\n    document.getElementById(\"mootimeter-main-container\").scrollIntoView();\n};"],"names":["uniqueID","obj","document","getElementById","addEventListener","tool","this","dataset","name","instance","storeNewPage","async","response","methodname","args","createNewPage","pageid","cmid","scrollIntoView"],"mappings":"oOAGqBA,iBACXC,IAAMC,SAASC,eAAeH,UAE/BE,SAASC,eAAeH,WAG7BC,IAAIG,iBAAiB,4BAOXC,KAAOC,KAAKC,QAAQC,KACpBC,SAAWH,KAAKC,QAAQE,gBAEvBC,aAAaL,KAAMI,oBA0B5BC,aAAeC,MAAMN,KAAMI,kBACvBG,cAjBY,EAClBP,KACAI,YACC,cAAU,CAAC,CACZI,WAAY,8BACZC,KAAM,CACFT,KAAAA,KACAI,SAAAA,aAEJ,GAQuBM,CAAcV,KAAMI,0CAChCG,SAASI,OAAQJ,SAASK,MAGrCf,SAASC,eAAe,6BAA6Be"}