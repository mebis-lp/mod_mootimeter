{"version":3,"file":"add_new_answer_option.min.js","sources":["../src/add_new_answer_option.js"],"sourcesContent":["import {call as fetchMany} from 'core/ajax';\nimport {execReloadPage as reloadPage} from 'mod_mootimeter/reload_page';\n\nexport const init = (uniqId) => {\n\n    // Get all up elements.\n    var ao = document.getElementById(uniqId);\n\n    if (!ao) {\n        return;\n    }\n\n    ao.addEventListener(\"click\", store);\n\n    /**\n     * Create new page.\n     */\n    function store() {\n        const dataset = document.getElementById('mootimeterstate').dataset;\n        storeNewAnswerOption(dataset);\n    }\n};\n\n/**\n * Call to create a new instance\n * @param {int} pageid\n * @returns {mixed}\n */\nconst execStoreNewAnswerOption = (\n    pageid,\n) => fetchMany([{\n    methodname: 'mootimetertool_quiz_new_answeroption',\n    args: {\n        pageid,\n    },\n}])[0];\n\n/**\n * Executes the call to create a new page.\n * @param {array} dataset\n */\nconst storeNewAnswerOption = async(dataset) => {\n    await execStoreNewAnswerOption(dataset.pageid);\n\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    const cmid = urlParams.get('id');\n\n    reloadPage(dataset.pageid, cmid, dataset);\n};\n"],"names":["uniqId","ao","document","getElementById","addEventListener","dataset","storeNewAnswerOption","async","pageid","methodname","args","queryString","window","location","search","cmid","URLSearchParams","get"],"mappings":"0OAGqBA,aAGbC,GAAKC,SAASC,eAAeH,QAE5BC,IAILA,GAAGG,iBAAiB,0BAMVC,QAAUH,SAASC,eAAe,mBAAmBE,QAC3DC,qBAAqBD,mBAsBvBC,qBAAuBC,MAAAA,UAZzBC,IAAAA,aAAAA,OAa+BH,QAAQG,QAZtC,cAAU,CAAC,CACZC,WAAY,uCACZC,KAAM,CACFF,OAAAA,WAEJ,UASMG,YAAcC,OAAOC,SAASC,OAE9BC,KADY,IAAIC,gBAAgBL,aACfM,IAAI,sCAEhBZ,QAAQG,OAAQO,KAAMV"}